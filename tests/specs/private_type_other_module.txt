# mod.ts
import { MyNamespace, YesDiagnostic2 } from "./diagnostic.ts";

export class MyClass extends YesDiagnostic2 {
  prop: MyNamespace.YesDiagnostic;
  other: Uint8Array;
}

# diagnostic.ts
class NoDiagnostic {}

export namespace MyNamespace {
  export class YesDiagnostic {}
}

export class YesDiagnostic2 {}

# diagnostics
error[private-type-ref]: public type 'MyClass' references private type 'YesDiagnostic2'
 --> /mod.ts:3:1
  | 
3 | export class MyClass extends YesDiagnostic2 {
  | ^
  = hint: make the referenced type public or remove the reference
  | 
7 | export class YesDiagnostic2 {}
  | - this is the referenced type

  info: to ensure documentation is complete all types that are exposed in the public API must be public


error[private-type-ref]: public type 'MyClass.prototype.prop' references private type 'MyNamespace'
 --> /mod.ts:4:3
  | 
4 |   prop: MyNamespace.YesDiagnostic;
  |   ^
  = hint: make the referenced type public or remove the reference
  | 
3 | export namespace MyNamespace {
  | - this is the referenced type

  info: to ensure documentation is complete all types that are exposed in the public API must be public


error[private-type-ref]: public type 'MyClass.prototype.prop' references private type 'MyNamespace.YesDiagnostic'
 --> /mod.ts:4:3
  | 
4 |   prop: MyNamespace.YesDiagnostic;
  |   ^
  = hint: make the referenced type public or remove the reference
  | 
4 |   export class YesDiagnostic {}
  |   - this is the referenced type

  info: to ensure documentation is complete all types that are exposed in the public API must be public


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:3:1
  | 
3 | export class MyClass extends YesDiagnostic2 {
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:4:3
  | 
4 |   prop: MyNamespace.YesDiagnostic;
  |   ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:5:3
  | 
5 |   other: Uint8Array;
  |   ^


# output.txt
Defined in file:///mod.ts:3:1

class MyClass extends YesDiagnostic2

  prop: MyNamespace.YesDiagnostic
  other: Uint8Array

Defined in file:///mod.ts:1:1


Defined in file:///mod.ts:1:1



# output.json
[
  {
    "kind": "class",
    "name": "MyClass",
    "location": {
      "filename": "file:///mod.ts",
      "line": 3,
      "col": 0,
      "byteIndex": 64
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "MyNamespace.YesDiagnostic",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MyNamespace.YesDiagnostic"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prop",
          "location": {
            "filename": "file:///mod.ts",
            "line": 4,
            "col": 2,
            "byteIndex": 112
          }
        },
        {
          "tsType": {
            "repr": "Uint8Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Uint8Array"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "other",
          "location": {
            "filename": "file:///mod.ts",
            "line": 5,
            "col": 2,
            "byteIndex": 147
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "YesDiagnostic2",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "import",
    "name": "MyNamespace",
    "location": {
      "filename": "file:///mod.ts",
      "line": 1,
      "col": 0,
      "byteIndex": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///diagnostic.ts",
      "imported": "MyNamespace"
    }
  },
  {
    "kind": "import",
    "name": "YesDiagnostic2",
    "location": {
      "filename": "file:///mod.ts",
      "line": 1,
      "col": 0,
      "byteIndex": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///diagnostic.ts",
      "imported": "YesDiagnostic2"
    }
  }
]
