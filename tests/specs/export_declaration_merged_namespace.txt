# mod.ts
namespace Namespace1 {
  export class Test1 {}
}
namespace Namespace1 {
  export class Test2 {}
}

export { Namespace1 };

# diagnostics
error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:1:1
  | 
1 | namespace Namespace1 {
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:2:3
  | 
2 |   export class Test1 {}
  |   ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:5:3
  | 
5 |   export class Test2 {}
  |   ^

# output.txt
Defined in file:///mod.ts:1:1

namespace Namespace1

  class Test1
  class Test2


# output.json
[
  {
    "name": "Namespace1",
    "isDefault": false,
    "location": {
      "filename": "file:///mod.ts",
      "line": 1,
      "col": 0,
      "byteIndex": 0
    },
    "declarationKind": "export",
    "kind": "namespace",
    "namespaceDef": {
      "elements": [
        {
          "name": "Test1",
          "isDefault": false,
          "location": {
            "filename": "file:///mod.ts",
            "line": 2,
            "col": 2,
            "byteIndex": 25
          },
          "declarationKind": "export",
          "kind": "class",
          "classDef": {
            "isAbstract": false,
            "constructors": [],
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": null,
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "name": "Test2",
          "isDefault": false,
          "location": {
            "filename": "file:///mod.ts",
            "line": 5,
            "col": 2,
            "byteIndex": 74
          },
          "declarationKind": "export",
          "kind": "class",
          "classDef": {
            "isAbstract": false,
            "constructors": [],
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": null,
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        }
      ]
    }
  }
]
