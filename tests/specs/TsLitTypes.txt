# mod.ts
export type boolLit = false;
export type strLit = "text";
export type tplLit = `text`;
export type tplLitArg = `test${number}`;
export type numLit = 5;

# diagnostics
error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:1:1
  | 
1 | export type boolLit = false;
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:2:1
  | 
2 | export type strLit = "text";
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:3:1
  | 
3 | export type tplLit = `text`;
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:4:1
  | 
4 | export type tplLitArg = `test${number}`;
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:5:1
  | 
5 | export type numLit = 5;
  | ^


# output.txt
Defined in file:///mod.ts:1:1

type boolLit = false

Defined in file:///mod.ts:5:1

type numLit = 5

Defined in file:///mod.ts:2:1

type strLit = "text"

Defined in file:///mod.ts:3:1

type tplLit = `text`

Defined in file:///mod.ts:4:1

type tplLitArg = `test${number}`


# output.json
[
  {
    "kind": "typeAlias",
    "name": "boolLit",
    "location": {
      "filename": "file:///mod.ts",
      "line": 1,
      "col": 0,
      "byteIndex": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "false",
        "kind": "literal",
        "literal": {
          "kind": "boolean",
          "boolean": false
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "strLit",
    "location": {
      "filename": "file:///mod.ts",
      "line": 2,
      "col": 0,
      "byteIndex": 29
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "text",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "text"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "tplLit",
    "location": {
      "filename": "file:///mod.ts",
      "line": 3,
      "col": 0,
      "byteIndex": 58
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "text",
        "kind": "literal",
        "literal": {
          "kind": "template",
          "tsTypes": [
            {
              "repr": "text",
              "kind": "literal",
              "literal": {
                "kind": "string",
                "string": "text"
              }
            }
          ]
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "tplLitArg",
    "location": {
      "filename": "file:///mod.ts",
      "line": 4,
      "col": 0,
      "byteIndex": 87
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "test${number}",
        "kind": "literal",
        "literal": {
          "kind": "template",
          "tsTypes": [
            {
              "repr": "test",
              "kind": "literal",
              "literal": {
                "kind": "string",
                "string": "test"
              }
            },
            {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            {
              "repr": "",
              "kind": "literal",
              "literal": {
                "kind": "string",
                "string": ""
              }
            }
          ]
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "numLit",
    "location": {
      "filename": "file:///mod.ts",
      "line": 5,
      "col": 0,
      "byteIndex": 128
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "5",
        "kind": "literal",
        "literal": {
          "kind": "number",
          "number": 5.0
        }
      },
      "typeParams": []
    }
  }
]
