{ "private": true }
# mod.ts
export function a() {}
function b() {}
export class C {}
class D {}
export interface E {}
interface F {}
export namespace G {}
namespace H {}

# diagnostics
error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:1:1
  | 
1 | export function a() {}
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:3:1
  | 
3 | export class C {}
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:5:1
  | 
5 | export interface E {}
  | ^


error[missing-jsdoc]: exported symbol is missing JSDoc documentation
 --> /mod.ts:7:1
  | 
7 | export namespace G {}
  | ^


# output.txt
Defined in file:///mod.ts:1:1

function a(): void

Defined in file:///mod.ts:2:1

private function b(): void

Defined in file:///mod.ts:3:1

class C


Defined in file:///mod.ts:4:1

private class D


Defined in file:///mod.ts:5:1

interface E


Defined in file:///mod.ts:6:1

private interface F


Defined in file:///mod.ts:7:1

namespace G


Defined in file:///mod.ts:8:1

private namespace H



# output.json
[
  {
    "kind": "function",
    "name": "a",
    "location": {
      "filename": "file:///mod.ts",
      "line": 1,
      "col": 0,
      "byteIndex": 0
    },
    "declarationKind": "export",
    "functionDef": {
      "params": [],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "hasBody": true,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "C",
    "location": {
      "filename": "file:///mod.ts",
      "line": 3,
      "col": 0,
      "byteIndex": 39
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "E",
    "location": {
      "filename": "file:///mod.ts",
      "line": 5,
      "col": 0,
      "byteIndex": 68
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "namespace",
    "name": "G",
    "location": {
      "filename": "file:///mod.ts",
      "line": 7,
      "col": 0,
      "byteIndex": 105
    },
    "declarationKind": "export",
    "namespaceDef": {
      "elements": []
    }
  },
  {
    "kind": "function",
    "name": "b",
    "location": {
      "filename": "file:///mod.ts",
      "line": 2,
      "col": 0,
      "byteIndex": 23
    },
    "declarationKind": "private",
    "functionDef": {
      "params": [],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "hasBody": true,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "D",
    "location": {
      "filename": "file:///mod.ts",
      "line": 4,
      "col": 0,
      "byteIndex": 57
    },
    "declarationKind": "private",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "F",
    "location": {
      "filename": "file:///mod.ts",
      "line": 6,
      "col": 0,
      "byteIndex": 90
    },
    "declarationKind": "private",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "namespace",
    "name": "H",
    "location": {
      "filename": "file:///mod.ts",
      "line": 8,
      "col": 0,
      "byteIndex": 127
    },
    "declarationKind": "private",
    "namespaceDef": {
      "elements": []
    }
  }
]
