# mod.ts
export class Class {
  private pri() {}
  protected pro() {}
  public pub() {}
}

# output.txt
Defined in file:///mod.ts:1:1

class Class

  protected pro()
  pub()


# output.json
[
  {
    "kind": "class",
    "name": "Class",
    "location": {
      "filename": "file:///mod.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pri",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///mod.ts",
            "line": 2,
            "col": 2
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pro",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///mod.ts",
            "line": 3,
            "col": 2
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pub",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///mod.ts",
            "line": 4,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  }
]

# diagnostics
[
  {
    "location": {
      "filename": "file:///mod.ts",
      "line": 1,
      "col": 0
    },
    "kind": "Type is missing a JS documentation comment."
  },
  {
    "location": {
      "filename": "file:///mod.ts",
      "line": 2,
      "col": 2
    },
    "kind": "Type is missing a JS documentation comment."
  },
  {
    "location": {
      "filename": "file:///mod.ts",
      "line": 2,
      "col": 2
    },
    "kind": "Type reference could not be inferred. Add an explicit type to improve documentation."
  },
  {
    "location": {
      "filename": "file:///mod.ts",
      "line": 3,
      "col": 2
    },
    "kind": "Type is missing a JS documentation comment."
  },
  {
    "location": {
      "filename": "file:///mod.ts",
      "line": 3,
      "col": 2
    },
    "kind": "Type reference could not be inferred. Add an explicit type to improve documentation."
  },
  {
    "location": {
      "filename": "file:///mod.ts",
      "line": 4,
      "col": 2
    },
    "kind": "Type is missing a JS documentation comment."
  },
  {
    "location": {
      "filename": "file:///mod.ts",
      "line": 4,
      "col": 2
    },
    "kind": "Type reference could not be inferred. Add an explicit type to improve documentation."
  }
]
