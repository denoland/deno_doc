name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_doc-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-16.04, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install rust
        uses: hecrj/setup-rust-action@v1.3.3
        with:
          rust-version: "1.46.0"

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-

      - name: Environment
        run: |
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=RUST_BACKTRACE::full

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: rustfmt --check src/lib.rs

      - name: Build
        run: cargo build --locked --release --all-targets

      - name: Test
        run: cargo test --locked --release --all-targets 

      - name: Lint
        run: cargo clippy --all-targets --release --locked -- -D clippy::all

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_doc' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish -vv
