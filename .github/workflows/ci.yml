name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_doc-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-2019]
    defaults:
      run:
        shell: bash

    env:
      CARGO_INCREMENTAL: 0
      GH_ACTIONS: 1
      RUST_BACKTRACE: full
      RUSTFLAGS: -D warnings

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - uses: dsherret/rust-toolchain-file@v1

      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 1.x

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: |
          cargo fmt -- --check
          deno fmt --check

      - name: Lint
        run: |
          cargo clippy --all-targets --all-features --locked -- -D clippy::all
          deno lint --ignore=src/html,benches/fixtures,target/

      - name: Tailwind Check
        run: |
          deno task tailwind
          git diff --exit-code

      - name: Build
        run: deno task build && cargo build --locked --all-targets --all-features

      - name: Test
        run: |
          cargo test --locked --all-targets --all-features
          deno test --allow-read --allow-net

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_doc' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish

      - name: Get tag version
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        id: get_tag_version
        run: echo ::set-output name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Publish deno.land/x
        uses: denoland/publish-folder@82ce065074e7174baf444332c4b7c40869a4909a
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        with:
          folder: js
          branch: deno_registry
          tag: deno/${{ steps.get_tag_version.outputs.TAG_VERSION }}
          token: ${{ secrets.DENOBOT_PAT }}
          git-user-name: denobot
          git-user-email: denobot@users.noreply.github.com
