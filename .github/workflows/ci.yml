name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_doc-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-16.04, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install rust
        uses: hecrj/setup-rust-action@v1.3.4
        with:
          rust-version: 1.48.0

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-

      # It seems that the 'target' directory does not always get restored
      # from cache correctly on MacOS. In the build log we see the following:
      #
      #   Fresh serde_derive v1.0.115
      #
      # But a little while after that Cargo aborts because 'serde_derive' is
      # now nowhere to be found. We're not the only ones experiencing this,
      # see https://github.com/actions-rs/cargo/issues/111.
      #
      #   error[E0463]: can't find crate for `serde_derive`
      #   ##[error]   --> /Users/runner/.cargo/registry/src/github.com-
      #       |           1ecc6299db9ec823/serde-1.0.115/src/lib.rs:285:1
      #       |
      #   285 | extern crate serde_derive;
      #       | ^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate
      - name: Work around MacOS + Cargo + Github Actions cache bug
        if: runner.os == 'macOS'
        run: |
          cargo clean --locked --release \
                      -p ast_node \
                      -p is-macro \
                      -p serde_derive \
                      -p swc_ecma_parser \
                      -p swc_ecma_parser_macros \
                      -p swc_visit \
                      -p swc_visit_macros \

      - name: Environment
        run: |
          echo "GH_ACTIONS=1" >> ${GITHUB_ENV}
          echo "RUST_BACKTRACE=full" >> ${GITHUB_ENV}

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: rustfmt --check src/lib.rs

      - name: Build
        run: cargo build --locked --release --all-targets

      - name: Test
        run: cargo test --locked --release --all-targets 

      - name: Lint
        run: cargo clippy --all-targets --release --locked -- -D clippy::all

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_doc' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish -vv
